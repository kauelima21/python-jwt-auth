createTask:
  handler: src/handlers/tasks/create.lambda_handler
  events:
    - http:
        path: tasks
        method: post
  iamRoleStatements:
    - Effect: Allow
      Action:
        - dynamodb:PutItem
      Resource:
        - ${self:custom.table_config.table_arn}
fetchTasks:
  handler: src/handlers/tasks/fetch.lambda_handler
  events:
    - http:
        path: tasks
        method: get
  iamRoleStatements:
    - Effect: Allow
      Action:
        - dynamodb:Scan
      Resource:
        - ${self:custom.table_config.table_arn}
findTask:
  handler: src/handlers/tasks/find.lambda_handler
  events:
    - http:
        path: tasks/{id}
        method: get
  iamRoleStatements:
    - Effect: Allow
      Action:
        - dynamodb:Query
      Resource:
        - ${self:custom.table_config.table_arn}
completeTask:
  handler: src/handlers/tasks/complete.lambda_handler
  events:
    - http:
        path: tasks/{id}/complete
        method: patch
  iamRoleStatements:
    - Effect: Allow
      Action:
        - dynamodb:Query
        - dynamodb:UpdateItem
      Resource:
        - ${self:custom.table_config.table_arn}
updateTask:
  handler: src/handlers/tasks/update.lambda_handler
  events:
    - http:
        path: tasks/{id}
        method: put
  iamRoleStatements:
    - Effect: Allow
      Action:
        - dynamodb:Query
        - dynamodb:UpdateItem
      Resource:
        - ${self:custom.table_config.table_arn}
deleteTask:
  handler: src/handlers/tasks/delete.lambda_handler
  events:
    - http:
        path: tasks/{id}
        method: delete
  iamRoleStatements:
    - Effect: Allow
      Action:
        - dynamodb:DeleteItem
      Resource:
        - ${self:custom.table_config.table_arn}